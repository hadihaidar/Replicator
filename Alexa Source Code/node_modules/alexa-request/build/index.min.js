'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var alexaConstants = require('alexa-constants');

var _class;
var _temp;

function entries(input) {
  const array = input || [];
  return Object.keys(array).map(key => [key, array[key]]);
}

let Request$2 = (_temp = _class = class Request$$1 {

  constructor(state = {}) {
    this.state = state;
  }

  session(session) {
    return new Request$$1(Object.assign({}, this.state, {
      session: Object.assign({}, this.state.session, session)
    }));
  }

  intent(name, slots = {}) {
    const slotData = entries(slots).reduce((state, [name, value]) => Object.assign({}, state, { [name]: { name, value } }), {});
    return new Request$$1(Object.assign({}, this.state, {
      request: {
        type: alexaConstants.Request.Intent,
        intent: Object.assign({
          name: name
        }, Object.keys(slotData).length ? { slots: slotData } : null)
      }
    }));
  }

  launchRequest() {
    return new Request$$1(Object.assign({}, this.state, {
      request: {
        type: alexaConstants.Request.Launch
      }
    }));
  }

  sessionEndedRequest() {
    return new Request$$1(Object.assign({}, this.state, {
      request: {
        type: alexaConstants.Request.SessionEnded
      }
    }));
  }

  build() {
    return Object.assign({}, this.state);
  }
}, _class.session = (...args) => new Request$2().session(...args), _class.intent = (...args) => new Request$2().intent(...args), _class.launchRequest = (...args) => new Request$2().launchRequest(...args), _class.sessionEndedRequest = (...args) => new Request$2().sessionEndedRequest(...args), _temp);

// For commonjs compatibility
const session = Request$2.session;
const intent = Request$2.intent;
const launchRequest = Request$2.launchRequest;
const sessionEndedRequest = Request$2.sessionEndedRequest;

exports['default'] = Request$2;
exports.session = session;
exports.intent = intent;
exports.launchRequest = launchRequest;
exports.sessionEndedRequest = sessionEndedRequest;
